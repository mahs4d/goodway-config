{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Goodway Configs","text":"<p>This library contains different utilities to work with configs in a good way.</p>"},{"location":"config_loader/base/","title":"Base","text":"<p>Config loaders are used for loading configuration from different places. All loaders inherit from <code>ConfigLoader</code> class and override the <code>load_config</code>. This function returns a dictionary containing the loaded config.</p>"},{"location":"config_loader/etcd_loader/","title":"Etcd Loader","text":"<p><code>EtcdConfigLoader</code> class can be used to load configuration from etcd.</p>"},{"location":"config_loader/etcd_loader/#installation","title":"Installation","text":"<p><code>pip install goodway-configs[etcd-loader]</code></p>"},{"location":"config_loader/etcd_loader/#usage","title":"Usage","text":"<pre><code>from goodway_configs.config_loader.etcd_loader import EtcdConfigLoader\nloader = EtcdConfigLoader(\nhost='localhost',\nport=2379,\nusername='user',\npassword='p@ssword',\nuse_ssl=True,\nkey='path/to/config'\n)\nconfig = await loader.load_config()\n</code></pre> <p>Note</p> <p><code>EtcdConfigLoader</code> is using etcd grpc proxy server. The default port for it is 2379.</p>"},{"location":"config_loader/etcd_loader/#usage-without-auth","title":"Usage without Auth","text":"<p>You can pass <code>None</code> for <code>username</code> and <code>password</code> to skip authentication.</p> <pre><code>from goodway_configs.config_loader.etcd_loader import EtcdConfigLoader\nloader = EtcdConfigLoader(\nhost='localhost',\nport=2379,\nusername=None,\npassword=None,\nuse_ssl=True,\nkey='path/to/config'\n)\n</code></pre>"},{"location":"config_loader/json_loader/","title":"Json Loader","text":"<p><code>JsonConfigLoader</code> class can be used to load configuration from json files.</p>"},{"location":"config_loader/json_loader/#installation","title":"Installation","text":"<p><code>pip install goodway-configs</code></p>"},{"location":"config_loader/json_loader/#usage","title":"Usage","text":"<pre><code>from pathlib import Path\nfrom goodway_configs.config_loader.json_loader import JsonConfigLoader\nloader = JsonConfigLoader(\nfile_path=Path('./config.json'),\n)\nconfig = await loader.load_config()\n</code></pre>"},{"location":"config_loader/multi_loader/","title":"Multi Loader","text":"<p><code>MultiConfigLoader</code> class can be used to combine configuration from multiple config loaders in an incremental way.</p>"},{"location":"config_loader/multi_loader/#installation","title":"Installation","text":"<p><code>pip install goodway-configs</code></p>"},{"location":"config_loader/multi_loader/#usage","title":"Usage","text":"<pre><code>from pathlib import Path\nfrom goodway_configs.config_loader.json_loader import JsonConfigLoader\nfrom goodway_configs.config_loader.multi_loader import MultiConfigLoader\nloader = MultiConfigLoader(config_loaders=[\nJsonConfigLoader(file_path=Path('./config1.json')),\nJsonConfigLoader(file_path=Path('./config2.json')),\n])\nconfig = await loader.load_config()\n</code></pre>"},{"location":"config_loader/yaml_loader/","title":"Yaml Loader","text":"<p><code>YamlConfigLoader</code> class can be used to load configuration from yaml files.</p>"},{"location":"config_loader/yaml_loader/#installation","title":"Installation","text":"<p><code>pip install goodway-configs[yaml-loader]</code></p>"},{"location":"config_loader/yaml_loader/#usage","title":"Usage","text":"<pre><code>from pathlib import Path\nfrom goodway_configs.config_loader.yaml_loader import YamlConfigLoader\nloader = YamlConfigLoader(\nfile_path=Path('./config.yaml'),\n)\nconfig = await loader.load_config()\n</code></pre>"}]}